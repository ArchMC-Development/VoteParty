plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.3.61'
	id 'com.github.johnrengelman.shadow' version '5.1.0' apply false
}

allprojects {
	apply plugin: 'org.jetbrains.kotlin.jvm'
	
	group 'me.clip'
	version '2.2'
	
	repositories {
		mavenCentral()
		
		maven {
			url = "https://papermc.io/repo/repository/maven-public/"
		}
		maven {
			url = "https://dl.bintray.com/ichbinjoe/public/"
		}
		maven {
			url = "https://repo.glaremasters.me/repository/public/"
		}
	}
	
	dependencies {
		// kotlin
		implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

		// spigot
		compileOnly "org.spigotmc:spigot-api:+"
		
		// testing
		compileOnly "org.jetbrains.kotlin:kotlin-reflect"
		testCompile "org.junit.jupiter:junit-jupiter-engine:5.4.2"
		testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.2"
	}
	
	
	test {
		useJUnitPlatform()
	}
	
	sourceSets {
		test.compileClasspath += configurations.compileOnly
		test.runtimeClasspath += configurations.compileOnly
	}
	
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	
	compileJava {
		options.compilerArgs += ["-parameters"]
		options.fork = true
		options.forkOptions.executable = 'javac'
	}
	
	compileKotlin {
		kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
		kotlinOptions.javaParameters = true
	}
	compileTestKotlin {
		kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
	}
}

apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
	minimize()
	relocate("co.aikar.commands", "me.clip.voteparty.libs.acf")
	relocate("ch.jalu.configme", "me.clip.voteparty.libs.configme")
	archiveFileName = "VoteParty-${project.version}.jar"
}


dependencies {

	// config
	implementation "ch.jalu:configme:1.2.0-SNAPSHOT"

	// placeholderapi
	compileOnly("me.clip:placeholderapi:2.10.4") {
		exclude group: "org.bstats", module: "bstats-bukkit"
	}
	
	compileOnly "com.vexsoftware:nuvotifier-universal:2.6.0"

	// command handler
	implementation "co.aikar:acf-paper:0.5.0-SNAPSHOT"

	// json stuff
	implementation "net.kyori:text-api:3.0.2"
	implementation "net.kyori:text-adapter-bukkit:3.0.3"
	
	implementation project(":version")
	implementation project(":version_old")
	implementation project(":version_new")
}

import org.apache.tools.ant.filters.ReplaceTokens


processResources {
	from(sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: [version: version]
	}
}